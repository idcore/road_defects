## Установка

1. В каталоге mongo запустить скрипт init_mongo.sh (скачает docker image mongo и запустит контейнер mongo_db на порте 27017 с пользователем mongoadmin и паролем secret). Если уже локально установлена mongo для других проектов, то ее на время придется остановить 
2. В каталоге backend установить зависимости при помощи pip install -r requiremets.txt, установка тестировалась в среде conda environment на основе python 3.9, для проверки работы backend запустить тест из каталога backend при помощи скрипта ./run_test.sh там используется команда pytest, pytest -k запустит явно названный тест, без параметра будут запущены все тесты начинающиеся на слово test, все тесты размещаются в папке tests
3. Опционально в каталоге frontend выполнить install_nodejs.sh, после этого из этого каталога должна быть возможность запуска фронта при помощи npm start

## Общая информация

1. Настройки backend в файле ./config/__init__.py
2. Используемые порты: 27017 - mongo, 3000 - frontend, 9090 - backend
3. В mongo используется одна база road_defects с 2мя коллекциями (хранят данные в формате json), tasks - содержит информацию о заданиях которые необходимо обработать, а также о результатах обработки задания 
4. За обработку заданий отвечает фоновый процесс в FastAPI он крутится в бесконечном цикле и как только видит в коллекции tasks новую задачу передает ее на обработку


## Pipeline подготовки данных (экстракция из ros bag в формате для модели в каталоге notebooks_preprocess
## Pipeline обучения модели представлен в каталоге training

